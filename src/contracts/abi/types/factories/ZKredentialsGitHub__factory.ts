/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  ZKredentialsGitHub,
  ZKredentialsGitHubInterface,
} from "../ZKredentialsGitHub";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "Registered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "tokenURI",
        type: "string",
      },
    ],
    name: "TokenURIUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "register",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_tokenURI",
        type: "string",
      },
    ],
    name: "setTokenURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280601381526020017f5a4b726564656e7469616c732047697448756200000000000000000000000000815250604051806040016040528060038152602001625a4b4760e81b815250816000908162000075919062000132565b50600162000084828262000132565b505050620001fe565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620000b857607f821691505b602082108103620000d957634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200012d57600081815260208120601f850160051c81016020861015620001085750805b601f850160051c820191505b81811015620001295782815560010162000114565b5050505b505050565b81516001600160401b038111156200014e576200014e6200008d565b62000166816200015f8454620000a3565b84620000df565b602080601f8311600181146200019e5760008415620001855750858301515b600019600386901b1c1916600185901b17855562000129565b600085815260208120601f198616915b82811015620001cf57888601518255948401946001909101908401620001ae565b5085821015620001ee5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611596806200020e6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806342842e0e11610097578063a22cb46511610066578063a22cb46514610212578063b88d4fde14610225578063c87b56dd14610238578063e985e9c51461024b57600080fd5b806342842e0e146101c35780636352211e146101d657806370a08231146101e957806395d89b411461020a57600080fd5b8063162094c4116100d3578063162094c4146101825780631aa3a0081461019557806323b872dd1461019d57806340c10f19146101b057600080fd5b806301ffc9a71461010557806306fdde031461012d578063081812fc14610142578063095ea7b31461016d575b600080fd5b610118610113366004610fce565b610287565b60405190151581526020015b60405180910390f35b6101356102d9565b604051610124919061103f565b610155610150366004611052565b61036b565b6040516001600160a01b039091168152602001610124565b61018061017b366004611087565b610392565b005b61018061019036600461113d565b6104ac565b610180610584565b6101806101ab366004611198565b610620565b6101806101be366004611087565b610651565b6101806101d1366004611198565b6106b9565b6101556101e4366004611052565b6106d4565b6101fc6101f73660046111d4565b610734565b604051908152602001610124565b6101356107ba565b6101806102203660046111ef565b6107c9565b61018061023336600461122b565b6107d4565b610135610246366004611052565b61080c565b6101186102593660046112a7565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b14806102b857506001600160e01b03198216635b5e139f60e01b145b806102d357506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546102e8906112da565b80601f0160208091040260200160405190810160405280929190818152602001828054610314906112da565b80156103615780601f1061033657610100808354040283529160200191610361565b820191906000526020600020905b81548152906001019060200180831161034457829003601f168201915b5050505050905090565b60006103768261092b565b506000908152600460205260409020546001600160a01b031690565b600061039d826106d4565b9050806001600160a01b0316836001600160a01b03160361040f5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061042b575061042b8133610259565b61049d5760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608401610406565b6104a7838361098d565b505050565b6000828152600260205260409020546001600160a01b03166105255760405162461bcd60e51b815260206004820152602c60248201527f4552433732314d657461646174613a2055524920736574206f66206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610406565b33600090815260066020526040902061053e8282611362565b50336001600160a01b03167f0d61faa98106efeae60c0e7296c7c29b6f4827bec34c55b4b2d7e01918e6616182604051610578919061103f565b60405180910390a25050565b3360009081526007602052604090205460ff16156105de5760405162461bcd60e51b8152602060048201526017602482015276155cd95c88185b1c9958591e481c9959da5cdd195c9959604a1b6044820152606401610406565b33600081815260076020526040808220805460ff19166001179055517f2d3734a8e47ac8316e500ac231c90a6e1848ca2285f40d07eaa52005e4b3a0e99190a2565b61062a33826109fb565b6106465760405162461bcd60e51b815260040161040690611422565b6104a7838383610a7a565b3360009081526007602052604090205460ff16156106ab5760405162461bcd60e51b8152602060048201526017602482015276155cd95c88185b1c9958591e481c9959da5cdd195c9959604a1b6044820152606401610406565b6106b58282610bde565b5050565b6104a7838383604051806020016040528060008152506107d4565b6000818152600260205260408120546001600160a01b0316806102d35760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610406565b60006001600160a01b03821661079e5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610406565b506001600160a01b031660009081526003602052604090205490565b6060600180546102e8906112da565b6106b5338383610bf8565b6107de33836109fb565b6107fa5760405162461bcd60e51b815260040161040690611422565b61080684848484610cc6565b50505050565b6000818152600260205260409020546060906001600160a01b031661088b5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610406565b33600090815260066020526040812080546108a5906112da565b80601f01602080910402602001604051908101604052809291908181526020018280546108d1906112da565b801561091e5780601f106108f35761010080835404028352916020019161091e565b820191906000526020600020905b81548152906001019060200180831161090157829003601f168201915b5093979650505050505050565b6000818152600260205260409020546001600160a01b031661098a5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610406565b50565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906109c2826106d4565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610a07836106d4565b9050806001600160a01b0316846001600160a01b03161480610a4e57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b80610a725750836001600160a01b0316610a678461036b565b6001600160a01b0316145b949350505050565b826001600160a01b0316610a8d826106d4565b6001600160a01b031614610ab35760405162461bcd60e51b81526004016104069061146f565b6001600160a01b038216610b155760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610406565b826001600160a01b0316610b28826106d4565b6001600160a01b031614610b4e5760405162461bcd60e51b81526004016104069061146f565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6106b5828260405180602001604052806000815250610cf9565b816001600160a01b0316836001600160a01b031603610c595760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610406565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610cd1848484610a7a565b610cdd84848484610d2c565b6108065760405162461bcd60e51b8152600401610406906114b4565b610d038383610e2d565b610d106000848484610d2c565b6104a75760405162461bcd60e51b8152600401610406906114b4565b60006001600160a01b0384163b15610e2257604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610d70903390899088908890600401611506565b6020604051808303816000875af1925050508015610dab575060408051601f3d908101601f19168201909252610da891810190611543565b60015b610e08573d808015610dd9576040519150601f19603f3d011682016040523d82523d6000602084013e610dde565b606091505b508051600003610e005760405162461bcd60e51b8152600401610406906114b4565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610a72565b506001949350505050565b6001600160a01b038216610e835760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610406565b6000818152600260205260409020546001600160a01b031615610ee85760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610406565b6000818152600260205260409020546001600160a01b031615610f4d5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610406565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b03198116811461098a57600080fd5b600060208284031215610fe057600080fd5b8135610feb81610fb8565b9392505050565b6000815180845260005b8181101561101857602081850181015186830182015201610ffc565b8181111561102a576000602083870101525b50601f01601f19169290920160200192915050565b602081526000610feb6020830184610ff2565b60006020828403121561106457600080fd5b5035919050565b80356001600160a01b038116811461108257600080fd5b919050565b6000806040838503121561109a57600080fd5b6110a38361106b565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff808411156110e2576110e26110b1565b604051601f8501601f19908116603f0116810190828211818310171561110a5761110a6110b1565b8160405280935085815286868601111561112357600080fd5b858560208301376000602087830101525050509392505050565b6000806040838503121561115057600080fd5b82359150602083013567ffffffffffffffff81111561116e57600080fd5b8301601f8101851361117f57600080fd5b61118e858235602084016110c7565b9150509250929050565b6000806000606084860312156111ad57600080fd5b6111b68461106b565b92506111c46020850161106b565b9150604084013590509250925092565b6000602082840312156111e657600080fd5b610feb8261106b565b6000806040838503121561120257600080fd5b61120b8361106b565b91506020830135801515811461122057600080fd5b809150509250929050565b6000806000806080858703121561124157600080fd5b61124a8561106b565b93506112586020860161106b565b925060408501359150606085013567ffffffffffffffff81111561127b57600080fd5b8501601f8101871361128c57600080fd5b61129b878235602084016110c7565b91505092959194509250565b600080604083850312156112ba57600080fd5b6112c38361106b565b91506112d16020840161106b565b90509250929050565b600181811c908216806112ee57607f821691505b60208210810361130e57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156104a757600081815260208120601f850160051c8101602086101561133b5750805b601f850160051c820191505b8181101561135a57828155600101611347565b505050505050565b815167ffffffffffffffff81111561137c5761137c6110b1565b6113908161138a84546112da565b84611314565b602080601f8311600181146113c557600084156113ad5750858301515b600019600386901b1c1916600185901b17855561135a565b600085815260208120601f198616915b828110156113f4578886015182559484019460019091019084016113d5565b50858210156114125787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061153990830184610ff2565b9695505050505050565b60006020828403121561155557600080fd5b8151610feb81610fb856fea264697066735822122098213d95b066c071739dc10c33b3f229483283d87ebc01b61c2d2d1f0b285b7664736f6c634300080f0033";

type ZKredentialsGitHubConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ZKredentialsGitHubConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ZKredentialsGitHub__factory extends ContractFactory {
  constructor(...args: ZKredentialsGitHubConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ZKredentialsGitHub> {
    return super.deploy(overrides || {}) as Promise<ZKredentialsGitHub>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ZKredentialsGitHub {
    return super.attach(address) as ZKredentialsGitHub;
  }
  override connect(signer: Signer): ZKredentialsGitHub__factory {
    return super.connect(signer) as ZKredentialsGitHub__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ZKredentialsGitHubInterface {
    return new utils.Interface(_abi) as ZKredentialsGitHubInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ZKredentialsGitHub {
    return new Contract(address, _abi, signerOrProvider) as ZKredentialsGitHub;
  }
}
